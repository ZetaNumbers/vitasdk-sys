/* automatically generated by rust-bindgen 0.58.1 */

#[allow(unused_imports)]
use crate::psp2::common_dialog::*;
#[allow(unused_imports)]
use crate::psp2::net::net::*;
#[allow(unused_imports)]
use crate::psp2::pspnet_adhocctl::*;
#[allow(unused_imports)]
use crate::psp2::types::*;

pub mod SceNetCheckDialogMode {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_NETCHECK_DIALOG_MODE_INVALID: Type = 0;
    pub const SCE_NETCHECK_DIALOG_MODE_ADHOC_CONN: Type = 1;
    pub const SCE_NETCHECK_DIALOG_MODE_PSN: Type = 2;
    pub const SCE_NETCHECK_DIALOG_MODE_PSN_ONLINE: Type = 3;
    pub const SCE_NETCHECK_DIALOG_MODE_PS3_CONNECT: Type = 4;
    pub const SCE_NETCHECK_DIALOG_MODE_PSP_ADHOC_CONN: Type = 5;
    pub const SCE_NETCHECK_DIALOG_MODE_PSP_ADHOC_CREATE: Type = 6;
    pub const SCE_NETCHECK_DIALOG_MODE_PSP_ADHOC_JOIN: Type = 7;
}
pub mod SceNetCheckDialogPS3ConnectAction {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_NETCHECK_DIALOG_PS3_CONNECT_ACTION_ENTER: Type = 0;
    pub const SCE_NETCHECK_DIALOG_PS3_CONNECT_ACTION_LEAVE: Type = 1;
}
#[repr(C)]
pub struct SceNpCommunicationId {
    pub data: [crate::ctypes::c_char; 9usize],
    pub term: crate::ctypes::c_char,
    pub num: SceUChar8,
    pub dummy: crate::ctypes::c_char,
}
#[repr(C)]
pub struct SceNetCheckDialogPS3ConnectParam {
    pub action: SceInt32,
    pub ssid: [crate::ctypes::c_char; 33usize],
    pub wpaKey: [crate::ctypes::c_char; 65usize],
    pub titleId: [crate::ctypes::c_char; 10usize],
}
#[repr(C)]
pub struct SceNetCheckDialogAgeRestriction {
    pub countryCode: [crate::ctypes::c_char; 2usize],
    pub age: SceInt8,
    pub padding: SceInt8,
}
#[repr(C)]
pub struct SceNetCheckDialogParam {
    pub sdkVersion: SceUInt32,
    pub commonParam: SceCommonDialogParam,
    pub mode: SceInt32,
    pub npCommunicationId: SceNpCommunicationId,
    pub ps3ConnectParam: *mut SceNetCheckDialogPS3ConnectParam,
    pub groupName: *mut SceNetAdhocctlGroupName,
    pub timeoutUs: SceUInt32,
    pub defaultAgeRestriction: SceInt8,
    pub padding: [SceInt8; 3usize],
    pub ageRestrictionCount: SceInt32,
    pub ageRestriction: *const SceNetCheckDialogAgeRestriction,
    pub reserved: [SceUInt8; 104usize],
}
#[repr(C)]
pub struct SceNetCheckDialogResult {
    pub result: SceInt32,
    pub psnModeSucceeded: SceBool,
    pub reserved: [SceUInt8; 124usize],
}
#[repr(C)]
pub struct SceNetCheckDialogPS3ConnectInfo {
    pub inaddr: SceNetInAddr,
    pub nickname: [SceUInt8; 128usize],
    pub macAddress: [SceUInt8; 6usize],
    pub reserved: [SceUInt8; 6usize],
}
extern "C" {
    pub fn sceNetCheckDialogInit(param: *mut SceNetCheckDialogParam) -> SceInt32;
}
extern "C" {
    pub fn sceNetCheckDialogGetStatus() -> SceCommonDialogStatus::Type;
}
extern "C" {
    pub fn sceNetCheckDialogAbort() -> SceInt32;
}
extern "C" {
    pub fn sceNetCheckDialogGetResult(result: *mut SceNetCheckDialogResult) -> SceInt32;
}
extern "C" {
    pub fn sceNetCheckDialogGetPS3ConnectInfo(
        info: *mut SceNetCheckDialogPS3ConnectInfo,
    ) -> SceInt32;
}
extern "C" {
    pub fn sceNetCheckDialogTerm() -> SceInt32;
}
