/* automatically generated by rust-bindgen 0.58.1 */

#[allow(unused_imports)]
use crate::psp2::types::*;
#[allow(unused_imports)]
use crate::psp2kern::kernel::kbl::kbl::*;
#[allow(unused_imports)]
use crate::psp2kern::types::*;

pub mod SceKernelSysrootSelfIndex {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_KERNEL_SYSROOT_SELF_INDEX_GCAUTHMGR_SM: Type = 0;
    pub const SCE_KERNEL_SYSROOT_SELF_INDEX_RMAUTH_SM: Type = 1;
    pub const SCE_KERNEL_SYSROOT_SELF_INDEX_ENCDEC_W_PORTABILITY_SM: Type = 2;
}
#[repr(C)]
pub struct SceKernelSysrootSelfInfo {
    pub size: SceSize,
    pub self_data: *mut crate::ctypes::c_void,
    pub self_size: SceSize,
}
extern "C" {
    pub fn ksceKernelSysrootGetKblParam() -> *mut crate::ctypes::c_void;
}
extern "C" {
    pub fn ksceKernelSysrootGetProcessTitleId(
        pid: SceUID,
        titleid: *mut crate::ctypes::c_char,
        len: SceSize,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSysrootGetSelfInfo(
        index: SceKernelSysrootSelfIndex::Type,
        info: *mut SceKernelSysrootSelfInfo,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSysrootUseExternalStorage() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSysrootUseInternalStorage() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSysrootIsManufacturingMode() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSysrootIsNonRemovableCardMode() -> crate::ctypes::c_int;
}
#[repr(C)]
pub struct SceSysrootProcessHandler {
    pub size: SceSize,
    pub unk_4: ::core::option::Option<
        unsafe extern "C" fn(pid: SceUID, modid: SceUID, flags: crate::ctypes::c_int, time: u64),
    >,
    pub exit: ::core::option::Option<
        unsafe extern "C" fn(pid: SceUID, flags: crate::ctypes::c_int, time: u64),
    >,
    pub kill: ::core::option::Option<unsafe extern "C" fn(pid: SceUID)>,
    pub unk_10: ::core::option::Option<unsafe extern "C" fn(pid: SceUID, modid: SceUID, time: u64)>,
    pub unk_14: ::core::option::Option<unsafe extern "C" fn(pid: SceUID, modid: SceUID, time: u64)>,
    pub unk_18: ::core::option::Option<unsafe extern "C" fn(pid: SceUID, modid: SceUID, time: u64)>,
    pub on_process_created: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
        ) -> crate::ctypes::c_int,
    >,
    pub unk_20: ::core::option::Option<unsafe extern "C" fn(pid: SceUID, modid: SceUID, time: u64)>,
    pub unk_24: ::core::option::Option<
        unsafe extern "C" fn(pid: SceUID, modid: SceUID, flags: crate::ctypes::c_int, time: u64),
    >,
}
extern "C" {
    pub fn ksceKernelSysrootSetProcessHandler(
        handlers: *const SceSysrootProcessHandler,
    ) -> crate::ctypes::c_int;
}
#[repr(C)]
pub struct SceSysrootDbgpHandler {
    pub size: SceSize,
    pub unk_0x04: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
            a4: crate::ctypes::c_int,
        ),
    >,
    pub unk_0x08: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
            a4: crate::ctypes::c_int,
        ),
    >,
    pub unk_0x0C: ::core::option::Option<unsafe extern "C" fn(a1: crate::ctypes::c_int)>,
    pub unk_0x10: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
            a4: crate::ctypes::c_int,
        ),
    >,
    pub unk_0x14: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
            a4: crate::ctypes::c_int,
        ),
    >,
    pub unk_0x18: ::core::option::Option<
        unsafe extern "C" fn(pid: SceUID, modid: SceUID, flags: crate::ctypes::c_int, time: u64),
    >,
    pub unk_0x1C: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
        ),
    >,
    pub unk_0x20: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
        ),
    >,
    pub unk_0x24: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
        ),
    >,
    pub unk_0x28:
        ::core::option::Option<unsafe extern "C" fn(pid: SceUID, modid: SceUID, time: u64)>,
    pub unk_0x2C:
        ::core::option::Option<unsafe extern "C" fn(pid: SceUID, modid: SceUID, time: u64)>,
    pub unk_0x30: ::core::option::Option<unsafe extern "C" fn(pid: SceUID) -> crate::ctypes::c_int>,
    pub unk_0x34: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
        ) -> crate::ctypes::c_int,
    >,
    pub unk_0x38: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: *mut crate::ctypes::c_void,
        ) -> crate::ctypes::c_int,
    >,
    pub unk_0x3C: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
        ) -> crate::ctypes::c_int,
    >,
    pub unk_0x40: ::core::option::Option<
        unsafe extern "C" fn(
            pid: SceUID,
            some_flag: *mut crate::ctypes::c_int,
        ) -> crate::ctypes::c_int,
    >,
    pub unk_0x44: ::core::option::Option<
        unsafe extern "C" fn(
            pid: SceUID,
            modid: SceUID,
            flags: crate::ctypes::c_int,
            time: u64,
        ) -> crate::ctypes::c_int,
    >,
    pub unk_0x48: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
        ) -> crate::ctypes::c_int,
    >,
    pub unk_0x4C: ::core::option::Option<unsafe extern "C" fn()>,
    pub unk_0x50: ::core::option::Option<unsafe extern "C" fn()>,
    pub unk_0x54: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
            a4: crate::ctypes::c_int,
            a5: crate::ctypes::c_int,
        ) -> crate::ctypes::c_int,
    >,
    pub unk_0x58: ::core::option::Option<
        unsafe extern "C" fn(
            a1: crate::ctypes::c_int,
            a2: crate::ctypes::c_int,
            a3: crate::ctypes::c_int,
        ) -> crate::ctypes::c_int,
    >,
}
extern "C" {
    pub fn ksceKernelSysrootRegisterDbgpHandler(
        handlers: *const SceSysrootDbgpHandler,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceKernelSysrootUnregisterDbgpHandler();
}
extern "C" {
    pub fn ksceSysrootGetHardwareFlags(flags: *mut crate::ctypes::c_void) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSysrootIsBsodReboot() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSysrootIsSafeMode() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSysrootIsUpdateMode() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSysrootIsUsbEnumWakeup() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceSysrootIsExternalBootMode() -> crate::ctypes::c_int;
}
pub type SceKernelGetSystemSwVersionFunc =
    ::core::option::Option<unsafe extern "C" fn() -> crate::ctypes::c_int>;
extern "C" {
    pub fn ksceKernelSysrootSetGetSystemSwVersionFunc(func: SceKernelGetSystemSwVersionFunc);
}
extern "C" {
    pub fn ksceKernelSysrootGetSystemSwVersion() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn ksceKernelSysrootGetShellPid() -> SceUID;
}
