/* automatically generated by rust-bindgen 0.58.1 */

pub const SCE_KERNEL_PROCESS_ID_SELF: u32 = 0;
pub const SCE_UID_NAMELEN: u32 = 31;
pub type SceChar8 = i8;
pub type SceUChar8 = u8;
pub type SceInt8 = i8;
pub type SceUInt8 = u8;
pub type SceShort16 = i16;
pub type SceUShort16 = u16;
pub type SceInt16 = i16;
pub type SceUInt16 = u16;
pub type SceInt32 = i32;
pub type SceUInt32 = u32;
pub type SceInt = i32;
pub type SceUInt = u32;
pub type SceInt64 = i64;
pub type SceUInt64 = u64;
pub type SceLong64 = i64;
pub type SceULong64 = u64;
pub type SceSize = crate::ctypes::c_uint;
pub type SceSSize = crate::ctypes::c_int;
pub type SceBool = crate::ctypes::c_int;
pub mod _bindgen_ty_1 {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_FALSE: Type = 0;
    pub const SCE_TRUE: Type = 1;
}
pub type SceFloat = f32;
pub type SceFloat32 = f32;
pub type SceDouble = f64;
pub type SceDouble64 = f64;
pub type SceSByte = crate::ctypes::c_schar;
pub type SceSByte8 = crate::ctypes::c_schar;
pub type SceByte = crate::ctypes::c_uchar;
pub type SceByte8 = crate::ctypes::c_uchar;
pub type SceWChar16 = u16;
pub type SceWChar32 = u32;
pub type SceVoid = crate::ctypes::c_void;
pub type ScePVoid = *mut crate::ctypes::c_void;
pub type SceIntPtr = crate::ctypes::c_int;
pub type SceUIntPtr = crate::ctypes::c_uint;
pub type SceUIntVAddr = SceUIntPtr;
#[repr(C)]
pub struct SceIVector2 {
    pub x: SceInt,
    pub y: SceInt,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceFVector2 {
    pub x: SceFloat,
    pub y: SceFloat,
}
#[repr(C)]
pub struct SceIVector3 {
    pub x: SceInt,
    pub y: SceInt,
    pub z: SceInt,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceFVector3 {
    pub x: SceFloat,
    pub y: SceFloat,
    pub z: SceFloat,
}
#[repr(C)]
pub struct SceIVector4 {
    pub x: SceInt,
    pub y: SceInt,
    pub z: SceInt,
    pub w: SceInt,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceFVector4 {
    pub x: SceFloat,
    pub y: SceFloat,
    pub z: SceFloat,
    pub w: SceFloat,
}
#[repr(C)]
pub struct SceIMatrix2 {
    pub x: SceIVector2,
    pub y: SceIVector2,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceFMatrix2 {
    pub x: SceFVector2,
    pub y: SceFVector2,
}
#[repr(C)]
pub struct SceIMatrix3 {
    pub x: SceIVector3,
    pub y: SceIVector3,
    pub z: SceIVector3,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceFMatrix3 {
    pub x: SceFVector3,
    pub y: SceFVector3,
    pub z: SceFVector3,
}
#[repr(C)]
pub struct SceIMatrix4 {
    pub x: SceIVector4,
    pub y: SceIVector4,
    pub z: SceIVector4,
    pub w: SceIVector4,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceFMatrix4 {
    pub x: SceFVector4,
    pub y: SceFVector4,
    pub z: SceFVector4,
    pub w: SceFVector4,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceFQuaternion {
    pub x: SceFloat,
    pub y: SceFloat,
    pub z: SceFloat,
    pub w: SceFloat,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceFColor {
    pub r: SceFloat,
    pub g: SceFloat,
    pub b: SceFloat,
    pub a: SceFloat,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceFPlane {
    pub a: SceFloat,
    pub b: SceFloat,
    pub c: SceFloat,
    pub d: SceFloat,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SceDateTime {
    pub year: crate::ctypes::c_ushort,
    pub month: crate::ctypes::c_ushort,
    pub day: crate::ctypes::c_ushort,
    pub hour: crate::ctypes::c_ushort,
    pub minute: crate::ctypes::c_ushort,
    pub second: crate::ctypes::c_ushort,
    pub microsecond: crate::ctypes::c_uint,
}
pub type SceMode = crate::ctypes::c_int;
pub type SceOff = SceInt64;
pub type SceUID = crate::ctypes::c_int;
pub type ScePID = crate::ctypes::c_int;
pub type SceName = *mut crate::ctypes::c_char;
