/* automatically generated by rust-bindgen 0.65.1 */

#[allow(unused_imports)]
use crate::psp2::types::*;
#[allow(unused_imports)]
use crate::psp2common::types::*;
#[allow(unused_imports)]
use crate::vitasdk::build_utils::*;

pub mod SceDisplayErrorCode {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_DISPLAY_ERROR_OK: Type = 0;
    pub const SCE_DISPLAY_ERROR_INVALID_HEAD: Type = 2150170624;
    pub const SCE_DISPLAY_ERROR_INVALID_VALUE: Type = 2150170625;
    pub const SCE_DISPLAY_ERROR_INVALID_ADDR: Type = 2150170626;
    pub const SCE_DISPLAY_ERROR_INVALID_PIXELFORMAT: Type = 2150170627;
    pub const SCE_DISPLAY_ERROR_INVALID_PITCH: Type = 2150170628;
    pub const SCE_DISPLAY_ERROR_INVALID_RESOLUTION: Type = 2150170629;
    pub const SCE_DISPLAY_ERROR_INVALID_UPDATETIMING: Type = 2150170630;
    pub const SCE_DISPLAY_ERROR_NO_FRAME_BUFFER: Type = 2150170631;
    pub const SCE_DISPLAY_ERROR_NO_PIXEL_DATA: Type = 2150170632;
    pub const SCE_DISPLAY_ERROR_NO_OUTPUT_SIGNAL: Type = 2150170633;
}
pub mod SceDisplayPixelFormat {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_DISPLAY_PIXELFORMAT_A8B8G8R8: Type = 0;
    pub const SCE_DISPLAY_PIXELFORMAT_A2B10G10R10: Type = 1619001344;
}
pub mod SceDisplaySetBufSync {
    pub type Type = crate::ctypes::c_uint;
    pub const SCE_DISPLAY_SETBUF_IMMEDIATE: Type = 0;
    pub const SCE_DISPLAY_SETBUF_NEXTFRAME: Type = 1;
}
#[repr(C)]
pub struct SceDisplayFrameBuf {
    pub size: SceSize,
    pub base: *mut crate::ctypes::c_void,
    pub pitch: crate::ctypes::c_uint,
    pub pixelformat: crate::ctypes::c_uint,
    pub width: crate::ctypes::c_uint,
    pub height: crate::ctypes::c_uint,
}
extern "C" {
    pub fn sceDisplaySetFrameBuf(
        pParam: *const SceDisplayFrameBuf,
        sync: SceDisplaySetBufSync::Type,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceDisplayGetFrameBuf(
        pParam: *mut SceDisplayFrameBuf,
        sync: SceDisplaySetBufSync::Type,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceDisplayGetPrimaryHead() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceDisplayGetRefreshRate(pFps: *mut f32) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceDisplayGetMaximumFrameBufResolution(
        width: *mut crate::ctypes::c_int,
        height: *mut crate::ctypes::c_int,
    ) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceDisplayGetVcount() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceDisplayGetVcountInternal(display: crate::ctypes::c_int) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceDisplayWaitVblankStart() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceDisplayWaitVblankStartCB() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceDisplayWaitVblankStartMulti(vcount: crate::ctypes::c_uint) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceDisplayWaitVblankStartMultiCB(vcount: crate::ctypes::c_uint) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceDisplayWaitSetFrameBuf() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceDisplayWaitSetFrameBufCB() -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceDisplayWaitSetFrameBufMulti(vcount: crate::ctypes::c_uint) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceDisplayWaitSetFrameBufMultiCB(vcount: crate::ctypes::c_uint) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceDisplayRegisterVblankStartCallback(uid: SceUID) -> crate::ctypes::c_int;
}
extern "C" {
    pub fn sceDisplayUnregisterVblankStartCallback(uid: SceUID) -> crate::ctypes::c_int;
}
